{"version":3,"sources":["slides/MVT_tags.png","slides/Gutenberg.png","slides/CPU.png","slides/GPU.png","components/Button/index.js","components/Indicator/index.js","components/RawMap/index.js","components/Background/index.js","slides/1.js","slides/2.js","slides/3.js","slides/4.js","slides/9.js","slides/5.js","slides/6.js","slides/7.js","slides/8.js","slides/slides-containers.js","components/Main/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Button","props","react_default","a","createElement","className","concat","position","onClick","handleSwitch","Indicator","_useState","useState","_useState2","Object","slicedToArray","selected","setSelected","useEffect","selectedSlide","init","indicators","nodes","push","key","value","e","Number","target","setSlide","reverse","Map","ReactMapboxGl","accessToken","RawMap","style","height","width","onStyleLoad","map","onMapLoad","center","zoom","pitch","containerStyle","padding","margin","Background","components_RawMap","layers","getStyle","i","type","layout","removeLayer","id","rotateCamera","timestamp","rotateTo","duration","requestAnimationFrame","_1","window","open","_2","arrow","_3","_4","_9","src","tags","alt","styleExample","source","tiles","minzoom","maxzoom","source-layer","filter","Date","getTime","line-cap","line-join","paint","line-opacity","line-color","line-width","DynamicStyling","setValue","_useState3","_useState4","setMap","_useState5","_useState6","dynamicZoom","setZoom","_useState7","_useState8","dynamicCenter","setCenter","_useState9","_useState10","minDate","setMinDate","_useState11","_useState12","maxDate","setMaxDate","JSON","stringify","undefined","onChange","cols","rows","paintProps","parse","setPaintProperty","setLayerZoomRange","setFilter","toFixed","instance","addLayer","on","getZoom","getCenter","_6","Gutenberg","_7","CPU","GPU","_8","slides_containers","intro","agenda","mapbox","MTV","encoding","_5","GLSL","WebGL_Intro","hardware","Main","state","slides","currentSlide","prev","_this","setState","slide","length","next","manageResponse","response","this","_this$state","components_Background","components_Button","components_Indicator","React","Component","Boolean","location","hostname","match","ReactDOM","render","components_Main","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7323180c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MVT_tags.d1ec9c2b.png\";","module.exports = __webpack_public_path__ + \"static/media/Gutenberg.b6dd07b1.png\";","module.exports = __webpack_public_path__ + \"static/media/CPU.aef33d87.png\";","module.exports = __webpack_public_path__ + \"static/media/GPU.2bd4bf87.png\";","import React from 'react';\r\nimport './style.scss';\r\n\r\nconst Button = props => (\r\n    <button className={`custom-button ${props.position}`} onClick={props.handleSwitch}></button>\r\n);\r\n  \r\nexport default Button;","import React, { useState, useEffect } from 'react';\r\nimport './style.scss';\r\n\r\nconst Indicator = props => {\r\n    const [selected, setSelected] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setSelected(props.selectedSlide);\r\n    }, [props.selectedSlide]);\r\n\r\n    const handleClick = value => {\r\n        setSelected(value);\r\n        props.setSlide(value);\r\n    }\r\n\r\n    let init = props.indicators;\r\n    const nodes = [];\r\n\r\n    while (init >= 0) {\r\n        nodes.push(\r\n            <button\r\n                key={init}\r\n                value={init}\r\n                className={selected == init ? 'button-selected': 'button-unselected'}\r\n                onClick={(e) => handleClick(Number(e.target.value))}\r\n                >\r\n            </button>\r\n        )\r\n        init--;\r\n    }\r\n\r\n    return (\r\n        <div className=\"indicator-container\">\r\n            {nodes.reverse()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Indicator;","import React from 'react';\r\nimport ReactMapboxGl from 'react-mapbox-gl';\r\n\r\nconst Map = ReactMapboxGl({\r\n    accessToken: 'pk.eyJ1IjoiYWRyaXNvbGlkIiwiYSI6ImNqNWt4cGczNjJpZW0yd29kYnJxZXhsaHkifQ.Iq48zrXcmg_xE2kZAbxmEQ'\r\n});\r\n\r\nconst RawMap = props => {\r\n    return (\r\n        <div style={{ height: '100%', width: '100%' }}>\r\n            <Map\r\n                onStyleLoad={(map) => props.onMapLoad(map)}\r\n                style={props.style}\r\n                center={props.center}\r\n                zoom={[props.zoom]}\r\n                pitch={props.pitch ? [props.pitch] : [0]}\r\n                containerStyle={{\r\n                    height: \"100%\",\r\n                    padding: 0,\r\n                    margin: 0\r\n                }}\r\n            >\r\n            </Map>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RawMap;","import React from 'react';\r\nimport RawMap from '../RawMap';\r\n\r\nconst Background = () => {\r\n\r\n    const rotate = map => {\r\n\r\n        const layers = map.getStyle().layers;\r\n        for (const i in layers) {\r\n            if (layers[i].type === 'symbol' && layers[i].layout['text-field']) {\r\n                map.removeLayer(layers[i].id);\r\n            }\r\n        }\r\n\r\n        const rotateCamera = timestamp => {\r\n            map.rotateTo((timestamp / 100) % 360, { duration: 50000 });\r\n            requestAnimationFrame(rotateCamera);\r\n        }\r\n\r\n        rotateCamera(0);\r\n    }\r\n\r\n    return (\r\n        <div style={{ height: '100%', width: '100%', position: 'absolute' }}>\r\n            <RawMap \r\n              onMapLoad={rotate} \r\n              style={'mapbox://styles/mapbox/navigation-guidance-night-v2?optimize=true'}\r\n              center={[2.815, 41.98]}\r\n              zoom={13}\r\n              pitch={45}\r\n              />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Background;","import React from 'react';\r\n\r\nexport default (\r\n    <div className=\"slide-container\">\r\n        <div className=\"intro-title\"> \r\n            <div>\r\n                A Web GIS app development\r\n            </div>\r\n            <div onClick={() => window.open('https://adrisolid.github.io/Redux-Weather-App/')}>\r\n                Weather dashboard ⛅️\r\n            </div>\r\n        </div>\r\n        <div className=\"col-null-center\"> \r\n            <div>\r\n                Jornadas SIG Libre, Girona 2019\r\n            </div>\r\n            <div>\r\n                Adrián Pérez Beneito\r\n            </div>  \r\n        </div>\r\n    </div>\r\n);\r\n","import React from 'react';\r\n\r\nexport default (\r\n    <div className=\"slide-container\">\r\n        <div className=\"intro-title\"> \r\n            <div>\r\n                Agenda\r\n            </div>\r\n        </div>\r\n        <div> \r\n            <ul>\r\n                <li> \r\n                    Arrival & presentation\r\n                </li>\r\n                <li> \r\n                    An introduction to Mapbox GL JS & WebGL\r\n                </li>\r\n                <li> \r\n                    Mapbox Vector Tiles\r\n                </li>\r\n                <li> \r\n                    Chart.js library\r\n                </li>\r\n                <li> \r\n                    Weather API\r\n                </li>\r\n                <li> \r\n                    Code (a bit)\r\n                </li>\r\n                <li> \r\n                    Open discussion\r\n                </li>\r\n            </ul>  \r\n        </div>\r\n    </div>\r\n);\r\n","import React from 'react';\r\n\r\nconst arrow = <div>🔽</div>;\r\n\r\nexport default (\r\n    <div className=\"slide-container\">\r\n        <div className=\"intro-title\"> \r\n            Mapbox GL JS\r\n        </div>\r\n        <div className=\"body col-null-center\">\r\n            <div>\r\n                Mapbox GL JS is a JavaScript library for interactive, \r\n                customizable vector maps on the web.\r\n            </div>\r\n            <br />\r\n            <div>\r\n                Mapbox Style Specification\r\n            </div>\r\n            {arrow}\r\n            <div>\r\n                MVT\r\n            </div>\r\n            {arrow}\r\n            <div>\r\n                WebGL\r\n            </div>\r\n            <br />\r\n        </div>\r\n    </div>\r\n);\r\n","import React from 'react';\r\n\r\nexport default (\r\n    <div className=\"slide-container\">\r\n        <div className=\"intro-title\"> \r\n            MVT\r\n        </div>\r\n        <div className=\"body col-null-center\">\r\n            <div>\r\n                Vector tiles are encoded as Google Protobufs (PBF), which allow for serializing structured data. \r\n            </div>\r\n            <br />\r\n            <div>\r\n                For clarity, Mapbox Vector Tiles use the .mvt file suffix.\r\n            </div>\r\n            <br />\r\n        </div>\r\n    </div>\r\n);\r\n","import React from 'react';\r\nimport tags from './MVT_tags.png';\r\n\r\nexport default (\r\n    <div className=\"slide-container\">\r\n        <div className=\"intro-title\"> \r\n            Encoding geometry & attributes\r\n        </div>\r\n        <div className=\"body row-sa-center\">\r\n            <div className=\"col-flex-s-center font-1-5\">\r\n                <div>\r\n                    <b>No concept of geographic information</b>\r\n                </div>\r\n                <div>\r\n                    To encode geographic information into a vector tile <b>a tool must convert the geographic coordinates</b>\r\n                </div>\r\n                <div>\r\n                    Attributes are encoded in a series of <b>tags</b>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-sb-center\">\r\n                <img src={tags} alt=\"tags image\" height=\"230\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n","import React, { useState, useEffect } from 'react';\r\nimport RawMap from '../components/RawMap';\r\n\r\nconst styleExample = {\r\n        \"id\": \"mapillary\",\r\n        \"type\": \"line\",\r\n        \"source\": {\r\n            \"type\": \"vector\",\r\n            \"tiles\": [\"https://d25uarhxywzl1j.cloudfront.net/v0.1/{z}/{x}/{y}.mvt\"],\r\n            \"minzoom\": 6,\r\n            \"maxzoom\": 14\r\n        },\r\n        \"source-layer\": \"mapillary-sequences\",\r\n        'filter': ['all',\r\n            ['>=', 'captured_at', new Date('06/29/2016').getTime()],\r\n            ['<=', 'captured_at', new Date('06/29/2019').getTime()]],\r\n        \"layout\": {\r\n            \"line-cap\": \"round\",\r\n            \"line-join\": \"round\"\r\n        },\r\n        \"paint\": {\r\n            \"line-opacity\": 0.6,\r\n            \"line-color\": \"rgb(53, 175, 109)\",\r\n            \"line-width\": 2\r\n        }\r\n}\r\n\r\nconst DynamicStyling = () => {\r\n    const [value, setValue] = useState({});\r\n    const [map, setMap] = useState(null);\r\n    const [dynamicZoom, setZoom] = useState(12);\r\n    const [dynamicCenter, setCenter] = useState([-87.622088, 41.878781]);\r\n    const [minDate, setMinDate] = useState('06/29/2016');\r\n    const [maxDate, setMaxDate] = useState('06/29/2019');\r\n\r\n    useEffect(() => {\r\n        setValue(JSON.stringify(styleExample, undefined, 2));\r\n    }, [styleExample]);\r\n\r\n    const addLayer = instance => {\r\n        setMap(instance);\r\n        instance.addLayer(styleExample, 'waterway-label');\r\n\r\n        instance.on('zoomend', () => {\r\n            setZoom(instance.getZoom());\r\n            setCenter(instance.getCenter());\r\n        })\r\n    }\r\n\r\n    const updatePaint = e => {\r\n        let paintProps = JSON.parse(value);\r\n\r\n        map.setPaintProperty(paintProps.id, 'line-opacity', paintProps.paint['line-opacity']);\r\n        map.setPaintProperty(paintProps.id, 'line-color', paintProps.paint['line-color']);\r\n        map.setPaintProperty(paintProps.id, 'line-width', paintProps.paint['line-width']);\r\n\r\n        map.setLayerZoomRange(paintProps.id, paintProps.source.minzoom, paintProps.source.maxzoom);\r\n\r\n        map.setFilter('mapillary', ['all',\r\n            ['>=', 'captured_at', new Date(minDate).getTime()],\r\n            ['<=', 'captured_at', new Date(maxDate).getTime()]])\r\n    }\r\n\r\n    const handleNewStyle = e => {\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const handleMinDate = e => {\r\n        setMinDate(e.target.value);\r\n    }\r\n\r\n    const handleMaxDate = e => {\r\n        setMaxDate(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"slide-container\">\r\n            <div className=\"intro-title\">\r\n                Layout, Paint & Expressions555\r\n        </div>\r\n            <div className=\"row-sb-center w-80\">\r\n                <div>\r\n                    <textarea value={value} onChange={handleNewStyle} cols={65} rows={20} />\r\n                    <div className=\"row-sa-center\">\r\n                        <button onClick={updatePaint}>Update</button>\r\n                        <input onChange={handleMinDate} value={minDate} />\r\n                        <input onChange={handleMaxDate} value={maxDate} />\r\n                        <div className=\"font-1\">\r\n                          Zoom: {dynamicZoom.toFixed(0)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ height: '100%', width: '50%' }}>\r\n                    <RawMap\r\n                        onMapLoad={addLayer}\r\n                        style={'mapbox://styles/mapbox/light-v10?optimize=true'}\r\n                        center={dynamicCenter}\r\n                        zoom={dynamicZoom}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DynamicStyling;\r\n","import React from 'react';\r\nimport Gutenberg from './Gutenberg.png';\r\n\r\nconst arrow = <div>🔽</div>;\r\n\r\nexport default (\r\n    <div className=\"slide-container\">\r\n        <div className=\"intro-title\"> \r\n            WebGL introduction\r\n        </div>\r\n        <div className=\"body col-null-center\">\r\n            <div>\r\n                <b>Shaders</b> are a set of instructions executed all at once for \r\n                every single pixel on the screen => like a type press\r\n            </div>\r\n            <br />\r\n            <div>\r\n                <img src={Gutenberg} alt=\"Gutenberg-WebGL comparation\" height=\"230\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n","import React from 'react';\r\nimport CPU from './CPU.png';\r\nimport GPU from './GPU.png';\r\n\r\nexport default (\r\n    <div className=\"slide-container\">\r\n        <div className=\"intro-title\"> \r\n            CPU vs GPU\r\n        </div>\r\n        <div className=\"body col-null-center\">\r\n            <div className=\"row-sa-center\">\r\n                <img src={CPU} alt=\"CPU illustration\" height=\"230\" />\r\n                <img src={GPU} alt=\"GPU illustration\" height=\"230\" />\r\n            </div>\r\n            <br />\r\n        </div>\r\n    </div>\r\n);\r\n","import React from 'react';\r\n\r\nexport default (\r\n    <div className=\"slide-container\">\r\n        <div className=\"intro-title\"> \r\n            What is GLSL?\r\n        </div>\r\n        <div className=\"body col-null-center\">\r\n            <div>\r\n                GLSL stands for openGL Shading Language, which is the specific standard of shader programs \r\n            </div>\r\n            <br />\r\n            <br />\r\n            <br />\r\n        </div>\r\n    </div>\r\n);\r\n","import React from 'react';\r\nimport intro from './1';\r\nimport agenda from './2';\r\nimport mapbox from './3';\r\nimport MTV from './4';\r\nimport encoding from './9';\r\nimport DynamicStyling from './5';\r\nimport WebGL_Intro from './6';\r\nimport hardware from './7';\r\nimport GLSL from './8';\r\n\r\nexport default (\r\n  [intro,\r\n   agenda,\r\n   mapbox,\r\n   MTV,\r\n   encoding,\r\n   <DynamicStyling />,\r\n   GLSL,\r\n   WebGL_Intro,\r\n   hardware]  \r\n);\r\n","import React from 'react';\r\nimport Button from '../Button';\r\nimport Indicator from '../Indicator';\r\nimport Background from '../Background';\r\nimport slide from '../../slides/slides-containers';\r\nimport './style.scss';\r\n\r\nclass Main extends React.Component {\r\n\r\n    state = {\r\n        slides: null,\r\n        currentSlide: 0,\r\n        indicators: null\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({\r\n            slides: slide[0]\r\n        });\r\n    }\r\n\r\n    prev = () => {\r\n        const { currentSlide } = this.state;\r\n\r\n        if(currentSlide === 0){\r\n          this.setState({\r\n            slides: slide[slide.length - 1],\r\n            currentSlide: slide.length - 1\r\n          });\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n            slides: slide[currentSlide - 1],\r\n            currentSlide: currentSlide - 1\r\n        });\r\n    }\r\n\r\n    next = () => {\r\n        const { currentSlide } = this.state;\r\n\r\n        if(currentSlide === slide.length - 1){\r\n          this.setState({\r\n            slides: slide[0],\r\n            currentSlide: 0\r\n          });\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n            slides: slide[currentSlide + 1],\r\n            currentSlide: currentSlide + 1\r\n        });\r\n    }\r\n\r\n    manageResponse = response => {\r\n        this.setState({\r\n            slides: slide[response],\r\n            currentSlide: response\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { slides, currentSlide } = this.state;\r\n\r\n        return (\r\n            <div className=\"container\">\r\n              <Background />\r\n              {slides && slides}\r\n              <Button handleSwitch={this.prev} position={'left'} />\r\n              <Button handleSwitch={this.next} position={'right'} />\r\n              <Indicator indicators={slide.length - 1} \r\n                         selectedSlide={currentSlide} \r\n                         setSlide={this.manageResponse} />\r\n             \r\n            </div>\r\n        );\r\n    }\r\n}\r\n  \r\nexport default Main;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Main from './components/Main';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Main />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}